name: CD – merge → dev (deploy)

on:
    push:
        branches: [dev]
    workflow_dispatch:

concurrency:
    group: deploy-services-dev-${{ github.ref }}
    cancel-in-progress: true

env:
    GCP_PROJECT: ${{ vars.GCP_PROJECT }}
    GCP_REGION: ${{ vars.GCP_REGION }}
    AR_HOST: ${{ vars.AR_HOST }}
    AR_REPO: ${{ vars.AR_REPO }}
    IMAGE_TAG: ${{ github.sha }}

jobs:
    changes:
        runs-on: ubuntu-22.04
        outputs:
            api: ${{ steps.filter.outputs.api }}
            mobile: ${{ steps.filter.outputs.mobile }}
        steps:
            - uses: actions/checkout@v4
            - id: filter
              uses: dorny/paths-filter@v3
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}
                  filters: |
                      api:
                        - 'apps/api/**'
                        - '.github/workflows/cd-merge-dev.yml'
                      mobile:
                        - 'apps/mobile/**'
                        - '.github/workflows/cd-merge-dev.yml'

    deploy-api:
        needs: [changes]
        if: needs.changes.outputs.api == 'true'
        name: Deploy API
        runs-on: ubuntu-22.04
        permissions:
            contents: read
        env:
            SERVICE_NAME: api-dev
            IMAGE_NAME: api
        steps:
            - uses: actions/checkout@v4
            - name: Auth
              uses: google-github-actions/auth@v2
              with:
                  credentials_json: ${{ secrets.GCP_SA_KEY_JSON }}
            - name: Setup gcloud
              uses: google-github-actions/setup-gcloud@v2
              with:
                  project_id: ${{ env.GCP_PROJECT }}
            - name: Docker auth
              run: gcloud auth configure-docker ${{ env.AR_HOST }} --quiet
            - name: Build image
              working-directory: apps/api
              run: |
                  IMAGE_URI=${{ env.AR_HOST }}/${{ env.GCP_PROJECT }}/${{ env.AR_REPO }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
                  echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
                  docker build -t "$IMAGE_URI" .
            - name: Push image
              run: docker push "$IMAGE_URI"
            - name: Deploy to Cloud Run
              run: |
                  gcloud run deploy ${{ env.SERVICE_NAME }} \
                    --project ${{ env.GCP_PROJECT }} \
                    --region ${{ env.GCP_REGION }} \
                    --image "$IMAGE_URI" \
                    --platform managed \
                    --allow-unauthenticated \
                    --set-env-vars API_PORT=8080,JWT_SECRET=${{ vars.JWT_SECRET }},FIREBASE_PROJECT_ID=${{ vars.FIREBASE_PROJECT_ID }},FIRESTORE_DATABASE_ID=${{ vars.FIRESTORE_DATABASE_ID }},WEB_ORIGIN=${{ vars.WEB_ORIGIN }},EXPO_WEB_ORIGIN=${{ vars.EXPO_WEB_ORIGIN }} \
                    --quiet
            - name: Show URL
              run: gcloud run services describe ${{ env.SERVICE_NAME }} --platform managed --region ${{ env.GCP_REGION }} --format='value(status.url)'

    deploy-mobile:
        needs: [changes]
        if: needs.changes.outputs.mobile == 'true'
        name: Deploy Mobile Web
        runs-on: ubuntu-22.04
        permissions:
            contents: read
        env:
            SERVICE_NAME: mobile-web-dev
            IMAGE_NAME: mobile-web
        steps:
            - uses: actions/checkout@v4
            - name: Auth
              uses: google-github-actions/auth@v2
              with:
                  credentials_json: ${{ secrets.GCP_SA_KEY_JSON }}
            - name: Setup gcloud
              uses: google-github-actions/setup-gcloud@v2
              with:
                  project_id: ${{ env.GCP_PROJECT }}
            - name: Docker auth
              run: gcloud auth configure-docker ${{ env.AR_HOST }} --quiet
            - name: Build image
              run: |
                  IMAGE_URI=${{ env.AR_HOST }}/${{ env.GCP_PROJECT }}/${{ env.AR_REPO }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
                  echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
                  docker build -f apps/mobile/Dockerfile --build-arg API_URL=${{ vars.API_DEV_URL }} -t "$IMAGE_URI" .
            - name: Push image
              run: docker push "$IMAGE_URI"
            - name: Deploy to Cloud Run
              run: |
                  gcloud run deploy ${{ env.SERVICE_NAME }} \
                    --project ${{ env.GCP_PROJECT }} \
                    --region ${{ env.GCP_REGION }} \
                    --image "$IMAGE_URI" \
                    --platform managed \
                    --allow-unauthenticated \
                    --quiet
            - name: Show URL
              run: gcloud run services describe ${{ env.SERVICE_NAME }} --platform managed --region ${{ env.GCP_REGION }} --format='value(status.url)'
